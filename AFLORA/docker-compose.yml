x-planner-service: &planner-service
  environment:
    - MQTT_SERVICE_NAME=mqtt_broker
    - MQTT_BROKER_PORT=1883
  volumes:
    - ./planner/planner.py:/planner.py
    - ./planner/requirements.txt:/requirements.txt
    - ./sensors-config:/sensors-config
  networks:
    - aflora_network
  depends_on:
    - mqtt_broker

x-analyzer-service: &analyzer-service
  environment:
      - MQTT_SERVICE_NAME=mqtt_broker
      - MQTT_BROKER_PORT=1883
      - INFLUX_TOKEN=se4iot_token
      - INFLUX_BUCKET=AFLORA
      - INFLUX_LINK=http://influxdb:8086
      - INFLUX_ORG=AFLORA
  volumes:
    - ./analyzer/analyzer.py:/analyzer.py
    - ./analyzer/requirements.txt:/requirements.txt
    - ./sensors-config:/sensors-config
    - ./knowledge:/knowledge
  networks:
    - aflora_network

x-executor-service: &executor-service
  environment:
      - MQTT_SERVICE_NAME=mqtt_broker
      - MQTT_BROKER_PORT=1883
      - INFLUX_TOKEN=se4iot_token
      - INFLUX_BUCKET=AFLORA
      - INFLUX_LINK=http://influxdb:8086
      - INFLUX_ORG=AFLORA
  volumes:
    - ./executor/executor.py:/executor.py
    - ./executor/requirements.txt:/requirements.txt
    - ./sensors-config:/sensors-config
  networks:
    - aflora_network

services:

  monitor:
    container_name: monitor
    build:
      context: ./monitor
      dockerfile: Dockerfile
    environment: 
      - INFLUX_TOKEN=se4iot_token
      - INFLUX_BUCKET=AFLORA
      - INFLUX_LINK=http://influxdb:8086
      - INFLUX_ORG=AFLORA
    networks:
      - aflora_network
    depends_on:
      - mqtt_broker
      - influxdb
    volumes:
      - ./knowledge:/app/knowledge

  greenhouse_analyzer:
    <<: *analyzer-service
    container_name: greenhouse_analyzer
    build:
      context: analyzer/greenhouse-analyzer/
      dockerfile: Dockerfile

  plant_analyzer:
    <<: *analyzer-service
    container_name: plant_analyzer
    build:
      context: analyzer/plant-analyzer/
      dockerfile: Dockerfile
    

  greenhouse_planner:
    <<: *planner-service
    container_name: greenhouse_planner
    build:
      context: planner/greenhouse-planner
      dockerfile: Dockerfile
    
  
  plant_planner:
    <<: *planner-service
    container_name: plant_planner
    build:
      context: planner/plant-planner
      dockerfile: Dockerfile
  
  greenhouse_executor:
    <<: *executor-service
    container_name: greenhouse_executor
    build:
      context: executor/greenhouse-executor/
      dockerfile: Dockerfile

  plant_executor:
    <<: *executor-service
    container_name: plant_executor
    build:
      context: executor/plant-executor/
      dockerfile: Dockerfile
  

  node_red:
    container_name: node_red
    build:
      context: ./nodered/
      dockerfile: Dockerfile
    environment:
      - BOT_TOKEN=7624803090:AAFl-2ZR2vFxRO37Z9KyyGIROTHloFWkPyM
      - CHAT_ID=-4723398728
      - TZ=TZ=Europe/Amsterdam
      - INFLUXDB_TOKEN=se4iot_token
    ports:
      - "1880:1880"
    networks:
      - aflora_network
    volumes:
      - ./nodered/data:/data
      - ./sensors-config/:/config/
  
  
  mqtt_broker:
    image: eclipse-mosquitto:2.0.20-openssl
    container_name: mqtt_broker
    ports:
      - "1883:1883" 
      - "9001:9001" 
    volumes:
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    networks:
      - aflora_network

  influxdb:
    image: influxdb:2.7.10
    container_name: influxdb
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=admin123
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=se4iot_token
      - DOCKER_INFLUXDB_INIT_ORG=AFLORA
      - DOCKER_INFLUXDB_INIT_BUCKET=AFLORA
    volumes:
      - influxdb2:/var/lib/influxdb2
    networks:
      - aflora_network

  publisher:
    build:
      context: ./publisher
    container_name: publisher
    depends_on:
      - mqtt_broker
    networks:
      - aflora_network
    volumes:
      - ./sensors-config:/app/sensors-config
  
  grafana:
    build:
      context: ./grafana
      dockerfile: Dockerfile
    container_name: grafana
    depends_on:
      - influxdb
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - INFLUXDB_BUCKET=AFLORA
      - GRAFANA_API_KEY=glsa_m12wWLbW7AmJiZ8YKdWLbNLEcu0yarlk_9362f0ff  # API Key in Grafana
      - GRAFANA_URL=http://localhost:3000  # Grafana URL
    ports:
      - '3000:3000'
    volumes:
      - ./grafana:/var/lib/grafana
      - ./sensors-config:/app/sensors-config
    networks:
      - aflora_network


volumes:
  influxdb2: 
    name: influxdb2

networks:
  aflora_network:
    
