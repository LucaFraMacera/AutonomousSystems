[agent]
  omit_hostname = true  # Disabilita l'aggiunta del tag host


[[inputs.mqtt_consumer]]
   # Server MQTT
  servers = ["tcp://mqtt_broker:1883"]

  # Wildcard per catturare i topic
  topics = ["/+/+/+"]  # Questo cattura /farm_x/plant_y/typeofsensor

  # Formato dei dati ricevuti
  data_format = "json"

  ## Campi JSON da salvare come valori
  json_string_fields = ["value"]


  ## Configura la gestione dei tag
  # Aggiungi farm_id, plant_id, e sensor_type come tag dinamici
  topic_tag = "topic"  # Il topic verr√† memorizzato come tag
  tags = {source = "mqtt"}  # Puoi aggiungere tag fissi come `source`

[[processors.regex]]
  namepass = ["mqtt_consumer"]  # Applica solo ai dati provenienti da mqtt_consumer

  # Estrai farm_id dal topic
  [[processors.regex.tags]]
    key = "topic"  # Campo su cui applicare il regex
    pattern = "/farm_(.*)/plant_(.*)/(.*)"
    replacement = "${1}"  # Primo gruppo regex (farm_id)
    result_key = "farm_id"  # Nome del nuovo tag

  # Estrai plant_id dal topic
  [[processors.regex.tags]]
    key = "topic"
    pattern = "/farm_(.*)/plant_(.*)/(.*)"
    replacement = "${2}"  # Secondo gruppo regex (plant_id)
    result_key = "plant_id"

  # Estrai sensor_type dal topic
  [[processors.regex.tags]]
    key = "topic"
    pattern = "/farm_(.*)/plant_(.*)/(.*)"
    replacement = "${3}"  # Terzo gruppo regex (sensor_type)
    result_key = "sensor_type"

[[outputs.influxdb_v2]]
  urls = ["http://influxdb:8086"]
  # token = "_qig87ubiujQMWXyYrgRL0wi9Gne9K9Skd_D7x3HzjWUQuaBqSv39CaW0wiuU1sVZV3Ba5yNNkv2J6mkfxt0KQ=="  # Usa questo token
  token = "se4iot_token"
  organization = "FLORA"
  bucket = "FLORA"
